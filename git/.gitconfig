[core]
  editor = vim
  excludesfile = ~/.gitignore
  ; pager = delta
[diff]
  tool = nvimdiff
  colorMoved = default
[difftool]
  prompt = false
  # Be able to abort all diffs with `:cq` or `:cquit`
  trustExitCode = true
[difftool "nvimdiff"]
  path = nvim
  # cmd = "nvim -d \"$LOCAL\" \"$REMOTE\""
[merge]
  tool = nvimdiff
  # conflictstyle = diff3
[mergetool "nvimdiff"]
  path = nvim
  # cmd = "nvim -d \"$LOCAL\" \"$REMOTE\" \"$MERGED\""
[push]
  default = simple
[credential]
  helper = cache --timeout=2600000
[credential "https://github.com"]
  username = Curly-Mo
[credential "https://ghe.spotify.net"]
  username = colinfahy
[alias]
  d = "difftool"
  l = "log"
  c = "commit"
  s = "status"
  execho = "!f() { echo $(tput setaf 2)'$' ${@}$(tput sgr0); $@; }; f"
  remoteupstream = "!f() { if $(git remote | grep -q upstream); then echo upstream; else echo origin; fi; }; f"
  remaster = "!f() { git execho git pull $(git remoteupstream) master --rebase --autostash; }; f"
  memaster = "!f() { git execho git pull $(git remoteupstream) master --autostash; }; f"
  remain = "!f() { git execho git pull $(git remoteupstream) main --rebase --autostash; }; f"
  memain = "!f() { git execho git pull $(git remoteupstream) main --autostash; }; f"
  arc = "! f() { git execho git tag archive/$(date '+%Y-%m-%d')/$1 $1 && git execho git branch -d $1; }; f"
  arcl = "! f() { git execho git tag --list --sort=-version:refname $@ | grep '^archive/';}; f"
  ; unarc = "! f() { git execho git checkout $(git arcl --sort=v:refname | grep $1 -m 1) && git switch -c $(echo $1 | sed -E 's/^archive\\/([^a-zA-Z]*\\/)*//') && git tag -d $1; }; f "
  unarc = "! f() { git arcl | grep $1 -m 1 && git execho git checkout $(git arcl --sort=v:refname | grep $1 -m 1) && git execho git switch -c $(echo $1 | sed -E 's/^archive\\/([^a-zA-Z]*\\/)*//') && git execho git tag -d $(git arcl --sort=v:refname | grep $1 -m 1); }; f "
  cleanup = "!f() { git execho git branch --merged master | grep -E -v '(^\\*|master|dev)' | xargs -n 1 git arc; }; f"
  fresh = "!f() { git execho git stash && git execho git checkout master && git execho git pull $(git remoteupstream) master && git execho git stash pop; }; f"
  new = "!f() { git execho git stash && git execho git checkout -b $1 --no-track $(git remoteupstream)/master && git execho git pull $(git remoteupstream) master --rebase --autostash && git execho git stash pop; }; f"
  # new = "!f() { git execho git checkout -b $1 master && git execho git pull $(git remoteupstream) master; }; f"
  co = "checkout"
  # Using git-extras instead: https://github.com/tj/git-extras/blob/master/Commands.md
  # new = "!f() { git execho git checkout -b $1 master && git execho git pull $(git remoteupstream) master; }; f"
  # copr = "!f() { git execho git fetch $(git remoteupstream) pull/$1/head:pr-$1 && git execho git checkout pr-$1; }; f"
  # pr = "!f() { git fetch -fu ${2:-origin} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
  # pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
  # git-extras aliases. requires https://github.com/tj/git-extras
  cb = "create-branch"
  nb = "create-branch"
  # new = "!f() { git execho git create-branch --from $(git remoteupstream)/master $@; }; f"
  br = "brv"
  rn = "rename-branch"
[user]
  name = Colin
  email = colin@cfahy.com
[includeIf "gitdir:~/workspace/"]
  path = ~/.gituser
[color]
  ui = auto
[pull]
  rebase = false
# Replace all git urls with https
[url "https://"]
  insteadOf = git://
[filesystem "N/A|11.0.8|/dev/mapper/cryptroot"]
  timestampResolution = 5000 nanoseconds
  minRacyThreshold = 3646 microseconds
[remote "origin"]
  # Replaced by pr alias
  # fetch = +refs/pull/*/head:refs/remotes/origin/pr/*
[interactive]
  diffFilter = delta --color-only --features=interactive
[delta]
  navigate = true  # use n and N to move between diff sections
  side-by-side = true
  features = line-numbers styles
[delta "styles"]
  syntax-theme = base16
  plus-style = black "#8787af"
  plus-non-emph-style = black "#8787af"
  plus-emph-style = black "#5f875f"
  minus-style = black "#8787af"
  minus-non-emph-style = black "#8787af"
  minus-emph-style = black "#af5f00"
[delta "line-numbers"]
  line-numbers = true
  line-numbers-right-format = "│"
  line-numbers-left-format = "{nm:>3}┊"
  line-numbers-right-format = "{np:>3}│"
[git-extras "create-branch"]
	remote = origin
[help]
	autocorrect = prompt
