#!/bin/zsh

local cmd=(bat --style=plain --color=always --pager=never --language=sh)
local fallback_cmd=(highlight --out-format=ansi --syntax=sh)

local args=()
while [ $# -gt 0 ]; do
  case "$1" in
    -l|--language) language="$2"; shift 2 ;;
    -l=*|--language=*) language="${1#*=}"; shift 1 ;;
    -s|--syntax) language="$2"; shift 2 ;;
    -s=*|--syntax=*) language="${1#*=}"; shift 1 ;;
    * ) args+=($1) ; shift 1 ;;
  esac
done
# echo $args[@]
# echo $language

local flags=( $(printf -- '%s\n' "$args" | grep -Eo '^--?.*') )
local args=( $(printf -- '%s\n' "$args" | grep -Eo '^[^-].*') )

setopt localoptions extended_glob
declare -A bat_kwargs=()
[ -n "${language}" ] && bat_kwargs[language]=${language}
bat_opts=( ${(zkj| |)bat_kwargs/(#m)*/--$MATCH="$bat_kwargs[$MATCH]"} )
declare -A highlight_kwargs=()
[ -n "${language}" ] && highlight_kwargs[syntax]=${language}
highlight_opts=( ${(zkj| |)highlight_kwargs/(#m)*/--$MATCH="$highlight_kwargs[$MATCH]"} )

# Check to see if a pipe exists on stdin.
if [ -p /dev/stdin ]; then
  ($cmd $bat_opts[@] $flags[@] - 2>/dev/null) || ($fallback_cmd $highlight_opts[@] $flags[@] -)
else
  (echo $args[@] | $cmd $bat_opts[@] $flags[@]) 2>/dev/null || (echo $args[@] | $fallback_cmd $highlight_opts[@] $flags[@])
fi
